name: macos-unit-tests-pr

on:
  pull_request:

permissions:
  contents: read

# to configure for PRs then cancel them
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  matrix_prep:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '2'

      - name: "Define matrix"
        id: set-matrix
        run: |
          changedDirs=$(git diff --dirstat=files HEAD~1 | sed 's/^[ 0-9.]\+% //g' | awk -F/ '{print $1}' | sort -u)
          relevantDirs=($(echo "$changedDirs" | grep -Fxf .github/workflows/macos.d/values.d/whitelisted-dirs))

          # Available image list: https://github.com/actions/runner-images?tab=readme-ov-file#available-images
          # macos-13-xlarge and macos-14 - arm64 images
          # macos-13 and macos-14-large - x86 images
          os=(macos-13, macos-13-xlarge, macos-14, macos-14-large)

          matrix=$(jq -n --argjson beat "$(printf '%s\n' "${relevantDirs[@]}" | jq -R . | jq -s .)" \
             --argjson os "$(printf '%s\n' "${os[@]}" | jq -R . | jq -s .)" \
             '{beat: $dir, os: $os}')

          echo "matrix={\"include\":$(echo $matrix)}" >> $GITHUB_OUTPUT

  unit-test-macos-15:
    needs: matrix_prep
    strategy:
      fail-fast: false
      max-parallel: 10
      matrix: ${{fromJson(needs.matrix_prep.outputs.matrix)}}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: .go-version

      - uses: actions/setup-python@v5
        with:
          cache: "pip"
          python-version-file: .python-version

      - name: Install mage
        run: go install github.com/magefile/mage

      - name: Run build / ${{ matrix.beat }}
        run: mage build
        working-directory: ${{ matrix.beat }}

      - name: Run unitTest / ${{ matrix.beat }}
        run: mage unitTest
        working-directory: ${{ matrix.beat }}

  # TODO: centralise github job with the status.
